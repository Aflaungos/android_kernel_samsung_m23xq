name: Build BoostKernel A14 with KernelSU
on:
  workflow_dispatch:
  schedule:
    - cron: "0 12 * * *"
jobs:
  build:
    strategy:
      matrix:
        device: [m23xq]
        
    name: Build BoostKernel For ${{ matrix.device }}
    runs-on: ubuntu-latest
    
    steps:
      - name: Installing Dependencies
        run: |
          sudo apt update -y
          sudo apt-get install -y lld binutils clang llvm zip flex bison libncurses-dev gawk  libiberty-dev autoconf kmod bc build-essential gcc libc6 curl libstdc++6 git wget libssl-dev cpio p7zip-full
          sudo apt clean
          
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Cache Build Tools
        id: cache-aosp-clang
        uses: actions/cache@v4
        with:
          path: Clang-10.0.0
          key: Clang-10.0.0  
        
      - name: Download Build Tools
        if: steps.cache-aosp-clang.outputs.cache-hit != 'true'
        run: |
          git clone https://github.com/Aflaungos/Clang_10.0.0 -b main Clang-10.0.0/clang
          git clone https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9 -b android-13.0.0_r0.13 Clang-10.0.0/aarch64-linux-android-4.9
      
      - name: Debug Clang directory
        run: |
         ls -a $GITHUB_WORKSPACE/Clang-10.0.0/clang
         ls -a $GITHUB_WORKSPACE/Clang-10.0.0/
         ls -a $GITHUB_WORKSPACE/Clang-10.0.0/clang/bin/
  
      - name: Setup kernel source
        uses: actions/checkout@v4
        with:
          repository: Aflaungos/android_kernel_samsung_m23xq
          ref: fourteen-BoostKernel
          path: kernel-source

      - name: Setup submodules
        run: git submodule update --init --recursive --depth 0
        working-directory: kernel-source

      - name: Checkout Anykernel
        uses: actions/checkout@v4
        with:
          submodules: true
          repository: Aflaungos/AnyKernel3
          ref: m23xq
          path: anykernel

      - name: Adjust file permissions
        working-directory: kernel-source
        run: |
          chmod a+x $GITHUB_WORKSPACE/Clang-10.0.0/clang/bin/clang
          
      - name: Build Kernel
        working-directory: kernel-source
        run: |
          export ARCH=arm64
          export PROJECT_NAME=m23xq
          export KERNEL_LLVM_BIN="$GITHUB_WORKSPACE/Clang-10.0.0/clang/bin/clang"
          export KERNEL_MAKE_ENV="DTC_EXT=$(pwd)/tools/dtc CONFIG_BUILD_ARM64_DT_OVERLAY=y"
          export CLANG_TRIPLE=aarch64-linux-gnu-
          export BUILD_CROSS_COMPILE="$GITHUB_WORKSPACE/Clang-10.0.0/aarch64-linux-android-4.9/bin/aarch64-linux-android-"
          output_dir=out
          make -j$(grep -c ^processor /proc/cpuinfo) -C $(pwd) O=$(pwd)/out $KERNEL_MAKE_ENV ARCH=arm64 CROSS_COMPILE=$BUILD_CROSS_COMPILE REAL_CC=$KERNEL_LLVM_BIN CLANG_TRIPLE=$CLANG_TRIPLE CONFIG_SECTION_MISMATCH_WARN_ONLY=y vendor/m23xq_eur_open_defconfig --no-print-directory
          make -j$(grep -c ^processor /proc/cpuinfo) -C $(pwd) O=$(pwd)/out $KERNEL_MAKE_ENV ARCH=arm64 CROSS_COMPILE=$BUILD_CROSS_COMPILE REAL_CC=$KERNEL_LLVM_BIN CLANG_TRIPLE=$CLANG_TRIPLE CONFIG_SECTION_MISMATCH_WARN_ONLY=y --no-print-directory
          $(pwd)/tools/mkdtimg create $(pwd)/out/arch/arm64/boot/dtbo.img --page_size=4096 $(find out/arch/arm64/boot/dts/samsung/m23/m23xq/ -name *.dtbo)
          
      - name: Upload BoostKernel-${{ matrix.device }}
        uses: actions/upload-artifact@v3
        with:
          name: BoostKernel-${{ matrix.device }}
          path: kernel-source/out/arch/arm64/boot/*
          
      - name: Prepare Anykernel
        working-directory: anykernel
        run: |
          cp -f $GITHUB_WORKSPACE/kernel-source/out/arch/arm64/boot/Image .
          ZIP_NAME="BoostKernel-KernelSU-${{ matrix.device }}"
          echo "ZIP_NAME=$ZIP_NAME" >> $GITHUB_ENV
          zip -r "$ZIP_NAME.zip" *
          mv "$ZIP_NAME.zip" $GITHUB_WORKSPACE
          
      - name: Upload Anykernel
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ZIP_NAME }}
          path: anykernel/*
          
      - name: Creating Config Info
        run: |
          echo "
          Works on Stock/GSIs/Roms
          " >> INFO.txt
      
      - name: Release
        if: success()
        uses: softprops/action-gh-release@v1
        with:
          name: "BoostKernel For ${{ matrix.device }}"
          body_path: "INFO.txt"
          files: |
            kernel-source/out/arch/arm64/boot/*
            ${{ env.ZIP_NAME }}.zip
          
      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        with:
          retain_days: 0
          keep_minimum_runs: 2
